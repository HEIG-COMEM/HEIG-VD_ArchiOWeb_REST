{
    "openapi": "3.0.3",
    "info": {
        "title": "REST API",
        "version": "1.0.0",
        "description": "**A demonstration REST API developed with [Express](https://expressjs.com).**"
    },
    "servers": [
        {
            "url": "https://heig-vd-archioweb-rest.onrender.com/api/v1"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication management"
        },
        {
            "name": "Users",
            "description": "User management"
        },
        {
            "name": "Publications",
            "description": "Publications management"
        },
        {
            "name": "Comments",
            "description": "Comments management"
        },
        {
            "name": "Friends",
            "description": "Friends management"
        },
        {
            "name": "Admin",
            "description": "Admin management"
        },
        {
            "name": "Status",
            "description": "API status"
        }
    ],
    "paths": {
        "/status": {
            "get": {
                "tags": ["Status"],
                "description": "Check the status of the API.",
                "responses": {
                    "200": {
                        "description": "The API is running.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "tags": ["Auth"],
                "description": "Register a new user.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserData"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "409": {
                        "description": "User already exists"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": ["Auth"],
                "description": "Authenticate a user.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthToken"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/auth/user": {
            "get": {
                "summary": "Get the authenticated user",
                "tags": ["Auth"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Get Users",
                "tags": ["Users"],
                "description": "Permet d'afficher les utilisateurs disponibles.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "description": "Numéro de page des résultats."
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        },
                        "description": "Nombre d'éléments par page."
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des utilisateurs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Get the user information",
                "tags": ["Users"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Unique identifier of the user"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "summary": "Allows to modify the user giving every informations",
                "tags": ["Users"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "UUID"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDataPut"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "patch": {
                "summary": "Allows to modify a user giving only the informations we want to change",
                "tags": ["Users"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "UUID"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "summary": "Allows to delete a user",
                "tags": ["Users"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "UUID"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/users/{id}/stats": {
            "get": {
                "tags": ["Users"],
                "description": "Get the statistics of a user.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The statistics of the user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserStats"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/publications": {
            "get": {
                "summary": "Get publications",
                "tags": ["Publications"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publications retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Publication"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "post": {
                "summary": "Allows to create a new publication",
                "tags": ["Publications"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublicationData"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Publication created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Publication"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/publications/{id}": {
            "get": {
                "summary": "Get the publications informations",
                "tags": ["Publications"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Identifiant unique de la publication"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publication retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Publication"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Publication not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "summary": "Allows to delete a publication",
                "tags": ["Publications"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Identifiant unique de la publication"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Publication deleted"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/publications/{id}/comments": {
            "get": {
                "summary": "Allows to get all the comments under a publication",
                "tags": ["Comments"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Identifiant unique de la publication"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "post": {
                "summary": "Allows to create a new comment",
                "tags": ["Comments"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Identifiant unique de la publication"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentData"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comment created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/publications/{id}/comments/{commentId}": {
            "delete": {
                "tags": ["Comments"],
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/friends": {
            "get": {
                "summary": "Allows to see a list of your friends",
                "tags": ["Friends"],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "description": "Numéro de page des résultats."
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        },
                        "description": "Nombre d'éléments par page."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["pending", "accepted"],
                            "description": "Statut de l'amitié."
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friends list retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Friend"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "summary": "Allows to create a friendship",
                "tags": ["Friends"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FriendData"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Friendship created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Friend"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/friends/{friendshipId}": {
            "delete": {
                "summary": "Allows to delete a friend",
                "tags": ["Friends"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "friendshipId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Identifiant unique de l'amitié"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Friend deleted"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Friend not found"
                    }
                }
            },
            "patch": {
                "summary": "Allows to update the status of a friendship",
                "tags": ["Friends"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "friendshipId",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Identifiant unique de l'amitié"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FriendStatus"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friendship status updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Friend"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Friendship request denied"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Friend request not found"
                    }
                }
            }
        },
        "/admin/notifications": {
            "post": {
                "tags": ["Admin"],
                "description": "",
                "responses": {
                    "200": {
                        "description": "Notification sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginData": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@email.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "required": ["email", "password"]
            },
            "User": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "672236fc79c78a9de1e25c59",
                        "description": "UUID"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe",
                        "description": "Name of the user."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@email.com"
                    },
                    "role": {
                        "type": "string",
                        "example": "user"
                    },
                    "profilePictureUrl": {
                        "oneOf": [
                            {
                                "type": "string",
                                "example": "default"
                            },
                            {
                                "type": "string",
                                "format": "binary"
                            }
                        ],
                        "description": "Un fichier à envoyer au serveur"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-30T13:39:08.348Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-30T13:39:08.349Z"
                    }
                },
                "required": [
                    "_id",
                    "name",
                    "email",
                    "role",
                    "profilePictureUrl",
                    "createdAt",
                    "updatedAt"
                ]
            },
            "UserGet": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "672236fc79c78a9de1e25c59",
                        "description": "UUID"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe",
                        "description": "Name of the user."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@email.com"
                    },
                    "role": {
                        "type": "string",
                        "example": "user"
                    },
                    "profilePictureUrl": {
                        "oneOf": [
                            {
                                "type": "string",
                                "example": "default"
                            },
                            {
                                "type": "string",
                                "format": "binary"
                            }
                        ],
                        "description": "Un fichier à envoyer au serveur"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-30T13:39:08.348Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-30T13:39:08.349Z"
                    },
                    "isFriend": {
                        "type": "integer",
                        "example": 0,
                        "description": "1 if the user is a friend, 0 if a request is pending, -1 if not a friend"
                    }
                },
                "required": [
                    "_id",
                    "name",
                    "email",
                    "role",
                    "profilePictureUrl",
                    "createdAt",
                    "updatedAt"
                ]
            },
            "UserData": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe",
                        "description": "Name of the user."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@email.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "required": ["name", "email", "password"]
            },
            "UserDataPut": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe",
                        "description": "Name of the user."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@email.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    },
                    "profilePictureUrl": {
                        "oneOf": [
                            {
                                "type": "string",
                                "example": "default"
                            },
                            {
                                "type": "string",
                                "format": "binary"
                            }
                        ],
                        "description": "Un fichier à envoyer au serveur"
                    }
                },
                "required": ["name", "email", "password", "profilePictureUrl"]
            },
            "UserStats": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@email.com"
                    },
                    "publications": {
                        "type": "integer",
                        "example": 5,
                        "description": "Number of publications"
                    },
                    "friends": {
                        "type": "integer",
                        "example": 3,
                        "description": "Number of friends"
                    },
                    "comments": {
                        "type": "integer",
                        "example": 10,
                        "description": "Number of comments"
                    }
                }
            },
            "Point": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": ["Point"],
                        "example": "Point"
                    },
                    "coordinates": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "example": [2.3522, 48.8566],
                        "description": "Longitude et latitude de la publication"
                    }
                }
            },
            "Publication": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "6756e41017bf26129f0abf4a"
                    },
                    "frontCamera": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://res.cloudinary.com/dsfssjubh/image/upload/v1732885563/isc3jukedh3keuqgx0r8.webp"
                            },
                            "id": {
                                "type": "string",
                                "example": "front-camera-1"
                            }
                        }
                    },
                    "backCamera": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://res.cloudinary.com/dsfssjubh/image/upload/v1732885566/tjrsabmoxgtlpckjxokb.webp"
                            },
                            "id": {
                                "type": "string",
                                "example": "back-camera-1"
                            }
                        }
                    },
                    "location": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["Point"],
                                "example": "Point"
                            },
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                },
                                "example": [22.7545, -13.808]
                            }
                        }
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string",
                                "example": "6756e41017bf26129f0abf28"
                            },
                            "name": {
                                "type": "string",
                                "example": "admin"
                            }
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-09T12:35:28.453Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-09T12:35:28.454Z"
                    }
                }
            },
            "PublicationData": {
                "type": "object",
                "properties": {
                    "frontCamera": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://example.com/front.jpg"
                            },
                            "id": {
                                "type": "string",
                                "example": "frontCameraId"
                            }
                        }
                    },
                    "backCamera": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://example.com/back.jpg"
                            },
                            "id": {
                                "type": "string",
                                "example": "backCameraId"
                            }
                        }
                    },
                    "location": {
                        "$ref": "#/components/schemas/Point"
                    }
                },
                "required": ["frontCamera", "backCamera", "location"]
            },
            "Comment": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "6756e41017bf26129f0ac112"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string",
                                "example": "6756e41017bf26129f0abf28"
                            },
                            "name": {
                                "type": "string",
                                "example": "admin"
                            }
                        }
                    },
                    "publication": {
                        "type": "string",
                        "example": "6756e41017bf26129f0abf4a"
                    },
                    "content": {
                        "type": "string",
                        "example": "Tactus tamquam aspernatur spoliatio alo rem aveho demitto defero."
                    },
                    "parentComment": {
                        "type": "string",
                        "nullable": true,
                        "example": null
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-09T12:35:28.657Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-12-09T12:35:28.657Z"
                    }
                }
            },
            "CommentData": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "example": "This is a comment"
                    }
                },
                "required": ["content"]
            },
            "Friend": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "6756e41017bf26129f0ac112"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "example": "6756e41017bf26129f0abf28"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "John Doe"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "john.doe@email.com"
                                },
                                "profilePictureUrl": {
                                    "type": "string",
                                    "example": "default.jpg"
                                }
                            }
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": ["pending", "accepted"],
                        "example": "pending"
                    },
                    "requester": {
                        "type": "string",
                        "example": "6756e41017bf26129f0abf28"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-30T13:39:08.348Z"
                    }
                }
            },
            "FriendData": {
                "type": "object",
                "properties": {
                    "friendId": {
                        "type": "string",
                        "example": "67890"
                    }
                },
                "required": ["friendId"]
            },
            "FriendStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["accepted", "denied"],
                        "example": "accepted"
                    }
                },
                "required": ["status"]
            },
            "Message": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Friend successfully deleted"
                    }
                }
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "example": "Time to be real"
                    },
                    "type": {
                        "type": "string",
                        "example": "bereal"
                    },
                    "_id": {
                        "type": "string",
                        "example": "674838e543fbbe915a8a93dc"
                    },
                    "sentAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-28T09:33:25.815Z"
                    },
                    "oneSignalNotificationId": {
                        "type": "string",
                        "example": "12345"
                    }
                }
            },
            "Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "OK"
                    }
                }
            },
            "AuthToken": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                }
            }
        }
    }
}
